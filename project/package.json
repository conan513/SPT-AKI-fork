{
    "name": "aki-server",
    "version": "1.4.0",
    "main": "src/ide/ReleaseEntry.js",
    "author": "SPT-AKI",
    "contributors": [
        "Merijn Hendriks (Senko-san, InNoHurryToCode)",
        "Ginja",
        "Terkoiz",
        "Reider123",
        "Erehkigal",
        "PoloYolo",
        "Craink",
        "Emperor06"
    ],
    "license": "NCSA",
    "repository": "https://dev.offline-tarkov.com/SPT-AKI/Server",
    "description": "Modding framework for Escape From Tarkov",
    "scripts": {
        "lint": "eslint --fix ./**/*.js",
        "test:debug": "node --trace-warnings src/ide/TestEntry.js",
        "test:release": "node --trace-warnings src/ide/ReleaseEntry.js",
        "build:types": "npx babel src --out-dir obj",
        "build:bundle-release": "npx browserify --node obj/ide/ReleaseEntry.js > obj/bundle.js",
        "build:bundle-debug": "npx browserify --node obj/ide/DebugEntry.js > obj/bundle.js",
        "build:minify": "npx minify obj/bundle.js --out-file obj/bundle.js",
        "build:exe": "node src/ide/Compiler.js",
        "build:release": "npm run build:types && npm run build:bundle-release && npm run build:exe",
        "build:debug": "npm run build:types && npm run build:bundle-debug && npm run build:exe"
    },
    "dependencies": {
        "node-forge": "0.10.0",
        "node-powershell": "4.0.0",
        "ws": "7.4.5"
    },
    "devDependencies": {
        "@babel/core": "7.14.2",
        "@babel/cli": "^7.13.16",
        "@babel/preset-env": "^7.14.2",
        "@babel/plugin-proposal-class-properties": "^7.13.0",
        "@babel/plugin-proposal-private-methods": "^7.13.0",
        "@babel/eslint-parser": "^7.14.2",
        "eslint": "^7.26.0",
        "browserify": "^17.0.0",
        "babel-minify": "^0.5.1",
        "nexe": "^4.0.0-beta.18",
        "rcedit": "^3.0.0",
        "bufferutil": "4.0.3",
        "utf-8-validate": "^5.0.5"
    },
    "babel": {
        "presets": [
            [
                "@babel/env",
                {
                    "targets": {
                        "node": "current"
                    },
                    "useBuiltIns": "usage",
                    "corejs": "3.10.0"
                }
            ]
        ],
        "plugins": [
            [
                "@babel/plugin-proposal-class-properties",
                {
                    "loose": true
                }
            ],
            [
                "@babel/plugin-proposal-private-methods",
                {
                    "loose": true
                }
            ]
        ],
        "ignore": [
            "*/node_modules",
            "*/obj",
            "*/user"
        ]
    },
    "eslintConfig": {
        "parser": "@babel/eslint-parser",
        "extends": "eslint:recommended",
        "parserOptions": {
            "ecmaVersion": 12,
            "sourceType": "module",
            "requireConfigFile": false
        },
        "rules": {
            "indent": [
                "warn",
                4,
                {
                    "SwitchCase": 1
                }
            ],
            "quotes": [
                "warn",
                "double"
            ],
            "semi": [
                "warn",
                "always"
            ],
            "no-undef": "off",
            "no-unused-vars": "off",
            "brace-style": [
                "warn",
                "allman",
                {
                    "allowSingleLine": false
                }
            ],
            "no-prototype-builtins": "warn",
            "no-constant-condition": "warn",
            "no-trailing-spaces": "warn",
            "keyword-spacing": "warn",
            "space-infix-ops": "warn",
            "space-in-parens": "warn",
            "eqeqeq": "warn",
            "comma-spacing": "warn",
            "padding-line-between-statements": [
                "warn",
                {
                    "blankLine": "always",
                    "prev": "*",
                    "next": "block-like"
                },
                {
                    "blankLine": "any",
                    "prev": "const",
                    "next": "block-like"
                },
                {
                    "blankLine": "any",
                    "prev": "let",
                    "next": "block-like"
                },
                {
                    "blankLine": "any",
                    "prev": "var",
                    "next": "block-like"
                },
                {
                    "blankLine": "any",
                    "prev": "expression",
                    "next": "block-like"
                }
            ]
        }
    }
}
