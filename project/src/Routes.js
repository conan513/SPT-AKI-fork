const BotCallbacks = require("./callbacks/BotCallbacks");
const CertCallbacks = require("./callbacks/CertCallbacks");
const CustomizationCallbacks = require("./callbacks/CustomizationCallbacks");
const DialogueCallbacks = require("./callbacks/DialogueCallbacks");
const GameCallbacks = require("./callbacks/GameCallbacks");
const HealthCallbacks = require("./callbacks/HealthCallbacks");
const HideoutCallbacks = require("./callbacks/HideoutCallbacks");
const HttpCallbacks = require("./callbacks/HttpCallbacks");
const InraidCallbacks = require("./callbacks/InraidCallbacks");
const InsuranceCallbacks = require("./callbacks/InsuranceCallbacks");
const InventoryCallbacks = require("./callbacks/InventoryCallbacks");
const ItemEventCallbacks = require("./callbacks/ItemEventCallbacks");
const LauncherCallbacks = require("./callbacks/LauncherCallbacks");
const LocationCallbacks = require("./callbacks/LocationCallbacks");
const MatchCallbacks = require("./callbacks/MatchCallbacks");
const ModCallbacks = require("./callbacks/ModCallbacks");
const NoteCallbacks = require("./callbacks/NoteCallbacks");
const NotifierCallbacks = require("./callbacks/NotifierCallbacks");
const PresetBuildCallbacks = require("./callbacks/PresetBuildCallbacks");
const PresetCallbacks = require("./callbacks/PresetCallbacks");
const ProfileCallbacks = require("./callbacks/ProfileCallbacks");
const QuestCallbacks = require("./callbacks/QuestCallbacks");
const RagfairCallbacks = require("./callbacks/RagfairCallbacks");
const RepairCallbacks = require("./callbacks/RepairCallbacks");
const SaveCallbacks = require("./callbacks/SaveCallbacks");
const TradeCallbacks = require("./callbacks/TradeCallbacks");
const TraderCallbacks = require("./callbacks/TraderCallbacks");
const WeatherCallbacks = require("./callbacks/WeatherCallbacks");
const WishlistCallbacks = require("./callbacks/WishlistCallbacks");

// server load
core_f.packager.onLoad["aki-certs"] = CertCallbacks.load;
core_f.packager.onLoad["aki-https"] = HttpCallbacks.load.bind(this);
core_f.packager.onLoad["aki-mods"] = ModCallbacks.load.bind(this);
core_f.packager.onLoad["aki-presets"] = PresetCallbacks.load.bind(this);
core_f.packager.onLoad["aki-ragfair"] = RagfairCallbacks.load.bind(this);
core_f.packager.onLoad["aki-save"] = SaveCallbacks.load.bind(this);
core_f.packager.onLoad["aki-traders"] = TraderCallbacks.load.bind(this);

// server update
core_f.packager.onUpdate["aki-dialogue"] = DialogueCallbacks.update.bind(this);
core_f.packager.onUpdate["aki-hideout"] = HideoutCallbacks.update.bind(this);
core_f.packager.onUpdate["aki-insurance"] = InsuranceCallbacks.update.bind(this);
core_f.packager.onUpdate["aki-ragfair-offers"] = RagfairCallbacks.update.bind(this);
core_f.packager.onUpdate["aki-ragfair-player"] = RagfairCallbacks.updatePlayer.bind(this);
core_f.packager.onUpdate["aki-traders"] = TraderCallbacks.update.bind(this);

// saves load
save_f.server.onLoad["aki-health"] = HealthCallbacks.onLoad.bind(this);
save_f.server.onLoad["aki-inraid"] = InraidCallbacks.onLoad.bind(this);
save_f.server.onLoad["aki-insurance"] = InsuranceCallbacks.onLoad.bind(this);
save_f.server.onLoad["aki-profile"] = ProfileCallbacks.onLoad.bind(this);

// server respond
https_f.server.onRespond["CERT_BIN"] = CertCallbacks.sendBinary;
https_f.server.onRespond["IMAGE"] = HttpCallbacks.sendImage.bind(this);
https_f.server.onRespond["BUNDLE"] = ModCallbacks.sendBundle.bind(this);
https_f.server.onReceive["SAVE"] = SaveCallbacks.save.bind(this);

// Static routes
https_f.router.addStaticRoute("/client/game/bot/generate", "Aki", BotCallbacks.generateBots);
https_f.router.addStaticRoute(CertCallbacks.endPoint, "Aki", CertCallbacks.registerBinary);
https_f.router.addStaticRoute("/client/trading/customization/storage", "Aki", CustomizationCallbacks.getSuits.bind(this));
https_f.router.addStaticRoute("/client/friend/list", "Aki", DialogueCallbacks.getFriendList.bind(this));
https_f.router.addStaticRoute("/client/chatServer/list", "Aki", DialogueCallbacks.getChatServerList.bind(this));
https_f.router.addStaticRoute("/client/mail/dialog/list", "Aki", DialogueCallbacks.getMailDialogList.bind(this));
https_f.router.addStaticRoute("/client/mail/dialog/view", "Aki", DialogueCallbacks.getMailDialogView.bind(this));
https_f.router.addStaticRoute("/client/mail/dialog/info", "Aki", DialogueCallbacks.getMailDialogInfo.bind(this));
https_f.router.addStaticRoute("/client/mail/dialog/remove", "Aki", DialogueCallbacks.removeDialog.bind(this));
https_f.router.addStaticRoute("/client/mail/dialog/pin", "Aki", DialogueCallbacks.pinDialog.bind(this));
https_f.router.addStaticRoute("/client/mail/dialog/unpin", "Aki", DialogueCallbacks.unpinDialog.bind(this));
https_f.router.addStaticRoute("/client/mail/dialog/read", "Aki", DialogueCallbacks.setRead.bind(this));
https_f.router.addStaticRoute("/client/mail/dialog/getAllAttachments", "Aki", DialogueCallbacks.getAllAttachments.bind(this));
https_f.router.addStaticRoute("/client/friend/request/list/outbox", "Aki", DialogueCallbacks.listOutbox.bind(this));
https_f.router.addStaticRoute("/client/friend/request/list/inbox", "Aki", DialogueCallbacks.listInbox.bind(this));
https_f.router.addStaticRoute("/client/friend/request/send", "Aki", DialogueCallbacks.friendRequest.bind(this));
https_f.router.addStaticRoute("/client/game/config", "Aki", GameCallbacks.getGameConfig.bind(this));
https_f.router.addStaticRoute("/client/server/list", "Aki", GameCallbacks.getServer.bind(this));
https_f.router.addStaticRoute("/client/game/version/validate", "Aki", GameCallbacks.versionValidate.bind(this));
https_f.router.addStaticRoute("/client/game/start", "Aki", GameCallbacks.gameStart.bind(this));
https_f.router.addStaticRoute("/client/game/logout", "Aki", GameCallbacks.gameLogout.bind(this));
https_f.router.addStaticRoute("/client/checkVersion", "Aki", GameCallbacks.validateGameVersion.bind(this));
https_f.router.addStaticRoute("/client/game/keepalive", "Aki", GameCallbacks.gameKeepalive.bind(this));
https_f.router.addStaticRoute("/player/health/sync", "Aki", HealthCallbacks.syncHealth.bind(this));
https_f.router.addStaticRoute("/raid/map/name", "Aki", InraidCallbacks.registerPlayer.bind(this));
https_f.router.addStaticRoute("/raid/profile/save", "Aki", InraidCallbacks.saveProgress.bind(this));
https_f.router.addStaticRoute("/singleplayer/settings/raid/endstate", "Aki", InraidCallbacks.getRaidEndState.bind(this));
https_f.router.addStaticRoute("/singleplayer/settings/weapon/durability", "Aki", InraidCallbacks.getWeaponDurability.bind(this));
https_f.router.addStaticRoute("/singleplayer/settings/raid/menu", "Aki", InraidCallbacks.getRaidMenuSettings.bind(this));
https_f.router.addStaticRoute("/client/insurance/items/list/cost", "Aki", InsuranceCallbacks.getInsuranceCost.bind(this));
https_f.router.addStaticRoute("/client/game/profile/items/moving", "Aki", ItemEventCallbacks.handleEvents.bind(this));
https_f.router.addStaticRoute("/launcher/server/connect", "Aki", LauncherCallbacks.connect.bind(this));
https_f.router.addStaticRoute("/launcher/profile/login", "Aki", LauncherCallbacks.login.bind(this));
https_f.router.addStaticRoute("/launcher/profile/register", "Aki", LauncherCallbacks.register.bind(this));
https_f.router.addStaticRoute("/launcher/profile/get", "Aki", LauncherCallbacks.get.bind(this));
https_f.router.addStaticRoute("/launcher/profile/change/username", "Aki", LauncherCallbacks.changeUsername.bind(this));
https_f.router.addStaticRoute("/launcher/profile/change/password", "Aki", LauncherCallbacks.changePassword.bind(this));
https_f.router.addStaticRoute("/launcher/profile/change/wipe", "Aki", LauncherCallbacks.wipe.bind(this));
https_f.router.addStaticRoute("/client/locations", "Aki", LocationCallbacks.getLocationData.bind(this));
https_f.router.addStaticRoute("/client/friend/request/send", "Aki", MatchCallbacks.friendRequest.bind(this));
https_f.router.addStaticRoute("/raid/profile/list", "Aki", MatchCallbacks.getProfile.bind(this));
https_f.router.addStaticRoute("/client/match/available", "Aki", MatchCallbacks.serverAvailable.bind(this));
https_f.router.addStaticRoute("/client/match/updatePing", "Aki", MatchCallbacks.updatePing.bind(this));
https_f.router.addStaticRoute("/client/match/join", "Aki", MatchCallbacks.joinMatch.bind(this));
https_f.router.addStaticRoute("/client/match/exit", "Aki", MatchCallbacks.exitMatch.bind(this));
https_f.router.addStaticRoute("/client/match/group/create", "Aki", MatchCallbacks.createGroup.bind(this));
https_f.router.addStaticRoute("/client/match/group/delete", "Aki", MatchCallbacks.deleteGroup.bind(this));
https_f.router.addStaticRoute("/client/match/group/status", "Aki", MatchCallbacks.getGroupStatus.bind(this));
https_f.router.addStaticRoute("/client/match/group/start_game", "Aki", MatchCallbacks.joinMatch.bind(this));
https_f.router.addStaticRoute("/client/match/group/exit_from_menu", "Aki", MatchCallbacks.exitToMenu.bind(this));
https_f.router.addStaticRoute("/client/match/group/looking/start", "Aki", MatchCallbacks.startGroupSearch.bind(this));
https_f.router.addStaticRoute("/client/match/group/looking/stop", "Aki", MatchCallbacks.stopGroupSearch.bind(this));
https_f.router.addStaticRoute("/client/match/group/invite/send", "Aki", MatchCallbacks.sendGroupInvite.bind(this));
https_f.router.addStaticRoute("/client/match/group/invite/accept", "Aki", MatchCallbacks.acceptGroupInvite.bind(this));
https_f.router.addStaticRoute("/client/match/group/invite/cancel", "Aki", MatchCallbacks.cancelGroupInvite.bind(this));
https_f.router.addStaticRoute("/client/putMetrics", "Aki", MatchCallbacks.putMetrics.bind(this));
https_f.router.addStaticRoute("/client/getMetricsConfig", "Aki", MatchCallbacks.getMetrics.bind(this));
https_f.router.addStaticRoute("/singleplayer/bundles", "Aki", ModCallbacks.getBundles.bind(this));
https_f.router.addStaticRoute("/client/notifier/channel/create", "Aki", NotifierCallbacks.createNotifierChannel.bind(this));
https_f.router.addStaticRoute("/client/game/profile/select", "Aki", NotifierCallbacks.selectProfile.bind(this));
https_f.router.addStaticRoute("/client/handbook/builds/my/list", "Aki", PresetBuildCallbacks.getHandbookUserlist.bind(this));
https_f.router.addStaticRoute("/client/game/profile/create", "Aki", ProfileCallbacks.createProfile.bind(this));
https_f.router.addStaticRoute("/client/game/profile/list", "Aki", ProfileCallbacks.getProfileData.bind(this));
https_f.router.addStaticRoute("/client/game/profile/savage/regenerate", "Aki", ProfileCallbacks.regenerateScav.bind(this));
https_f.router.addStaticRoute("/client/game/profile/nickname/change", "Aki", ProfileCallbacks.changeNickname.bind(this));
https_f.router.addStaticRoute("/client/game/profile/nickname/validate", "Aki", ProfileCallbacks.validateNickname.bind(this));
https_f.router.addStaticRoute("/client/game/profile/nickname/reserved", "Aki", ProfileCallbacks.getReservedNickname.bind(this));
https_f.router.addStaticRoute("/client/profile/status", "Aki", ProfileCallbacks.getProfileStatus.bind(this));
https_f.router.addStaticRoute("/client/quest/list", "Aki", QuestCallbacks.listQuests.bind(this));
https_f.router.addStaticRoute("/client/ragfair/search", "Aki", RagfairCallbacks.search.bind(this));
https_f.router.addStaticRoute("/client/ragfair/find", "Aki", RagfairCallbacks.search.bind(this));
https_f.router.addStaticRoute("/client/ragfair/itemMarketPrice", "Aki", RagfairCallbacks.getMarketPrice.bind(this));
https_f.router.addStaticRoute("/client/items/prices", "Aki", RagfairCallbacks.getItemPrices.bind(this));
https_f.router.addStaticRoute("/client/trading/api/getTradersList", "Aki", TraderCallbacks.getTraderList.bind(this));
https_f.router.addStaticRoute("/client/weather", "Aki", WeatherCallbacks.getWeather.bind(this));

// Dynamic routes
https_f.router.addDynamicRoute("/singleplayer/settings/bot/limit/", "Aki", BotCallbacks.getBotLimit);
https_f.router.addDynamicRoute("/singleplayer/settings/bot/difficulty/", "Aki", BotCallbacks.getBotDifficulty);
https_f.router.addDynamicRoute("/client/trading/customization/", "Aki", CustomizationCallbacks.getTraderSuits.bind(this));
https_f.router.addDynamicRoute(".jpg", "Aki", HttpCallbacks.getImage.bind(this));
https_f.router.addDynamicRoute(".png", "Aki", HttpCallbacks.getImage.bind(this));
https_f.router.addDynamicRoute("/api/location", "Aki", LocationCallbacks.getLocation.bind(this));
https_f.router.addDynamicRoute(".bundle", "Aki", ModCallbacks.getBundle.bind(this));
https_f.router.addDynamicRoute("/client/trading/api/getUserAssortPrice/trader/", "Aki", TraderCallbacks.getProfilePurchases.bind(this));
https_f.router.addDynamicRoute("/client/trading/api/getTrader/", "Aki", TraderCallbacks.getTrader.bind(this));
https_f.router.addDynamicRoute("/client/trading/api/getTraderAssort/", "Aki", TraderCallbacks.getAssort.bind(this));

// client/game/item/moving request event
item_f.eventHandler.addEvent("CustomizationWear", "Aki", CustomizationCallbacks.wearClothing.bind(this));
item_f.eventHandler.addEvent("CustomizationBuy", "Aki", CustomizationCallbacks.buyClothing.bind(this));
item_f.eventHandler.addEvent("Eat", "Aki", HealthCallbacks.offraidEat.bind(this));
item_f.eventHandler.addEvent("Heal", "Aki", HealthCallbacks.offraidHeal.bind(this));
item_f.eventHandler.addEvent("RestoreHealth", "Aki", HealthCallbacks.healthTreatment.bind(this));
item_f.eventHandler.addEvent("HideoutUpgrade", "Aki", HideoutCallbacks.upgrade.bind(this));
item_f.eventHandler.addEvent("HideoutUpgradeComplete", "Aki", HideoutCallbacks.upgradeComplete.bind(this));
item_f.eventHandler.addEvent("HideoutPutItemsInAreaSlots", "Aki", HideoutCallbacks.putItemsInAreaSlots.bind(this));
item_f.eventHandler.addEvent("HideoutTakeItemsFromAreaSlots", "Aki", HideoutCallbacks.takeItemsFromAreaSlots.bind(this));
item_f.eventHandler.addEvent("HideoutToggleArea", "Aki", HideoutCallbacks.toggleArea.bind(this));
item_f.eventHandler.addEvent("HideoutSingleProductionStart", "Aki", HideoutCallbacks.singleProductionStart.bind(this));
item_f.eventHandler.addEvent("HideoutScavCaseProductionStart", "Aki", HideoutCallbacks.scavCaseProductionStart.bind(this));
item_f.eventHandler.addEvent("HideoutContinuousProductionStart", "Aki", HideoutCallbacks.continuousProductionStart.bind(this));
item_f.eventHandler.addEvent("HideoutTakeProduction", "Aki", HideoutCallbacks.takeProduction.bind(this));
item_f.eventHandler.addEvent("Insure", "Aki", InsuranceCallbacks.insure.bind(this));
item_f.eventHandler.addEvent("Move", "Aki", InventoryCallbacks.moveItem.bind(this));
item_f.eventHandler.addEvent("Remove", "Aki", InventoryCallbacks.removeItem.bind(this));
item_f.eventHandler.addEvent("Split", "Aki", InventoryCallbacks.splitItem.bind(this));
item_f.eventHandler.addEvent("Merge", "Aki", InventoryCallbacks.mergeItem.bind(this));
item_f.eventHandler.addEvent("Transfer", "Aki", InventoryCallbacks.transferItem.bind(this));
item_f.eventHandler.addEvent("Swap", "Aki", InventoryCallbacks.swapItem.bind(this));
item_f.eventHandler.addEvent("Fold", "Aki", InventoryCallbacks.foldItem.bind(this));
item_f.eventHandler.addEvent("Toggle", "Aki", InventoryCallbacks.toggleItem.bind(this));
item_f.eventHandler.addEvent("Tag", "Aki", InventoryCallbacks.tagItem.bind(this));
item_f.eventHandler.addEvent("Bind", "Aki", InventoryCallbacks.bindItem.bind(this));
item_f.eventHandler.addEvent("Examine", "Aki", InventoryCallbacks.examineItem.bind(this));
item_f.eventHandler.addEvent("ReadEncyclopedia", "Aki", InventoryCallbacks.readEncyclopedia.bind(this));
item_f.eventHandler.addEvent("ApplyInventoryChanges", "Aki", InventoryCallbacks.sortInventory.bind(this));
item_f.eventHandler.addEvent("AddNote", "Aki", NoteCallbacks.addNote.bind(this));
item_f.eventHandler.addEvent("EditNote", "Aki", NoteCallbacks.editNote.bind(this));
item_f.eventHandler.addEvent("DeleteNote", "Aki", NoteCallbacks.deleteNote.bind(this));
item_f.eventHandler.addEvent("SaveBuild", "Aki", PresetBuildCallbacks.saveBuild.bind(this));
item_f.eventHandler.addEvent("RemoveBuild", "Aki", PresetBuildCallbacks.removeBuild.bind(this));
item_f.eventHandler.addEvent("QuestAccept", "Aki", QuestCallbacks.acceptQuest.bind(this));
item_f.eventHandler.addEvent("QuestComplete", "Aki", QuestCallbacks.completeQuest.bind(this));
item_f.eventHandler.addEvent("QuestHandover", "Aki", QuestCallbacks.handoverQuest.bind(this));
item_f.eventHandler.addEvent("RagFairAddOffer", "Aki", RagfairCallbacks.addOffer.bind(this));
item_f.eventHandler.addEvent("RagFairRemoveOffer", "Aki", RagfairCallbacks.removeOffer.bind(this));
item_f.eventHandler.addEvent("RagFairRenewOffer", "Aki", RagfairCallbacks.extendOffer.bind(this));
item_f.eventHandler.addEvent("Repair", "Aki", RepairCallbacks.repair.bind(this));
item_f.eventHandler.addEvent("TradingConfirm", "Aki", TradeCallbacks.processTrade.bind(this));
item_f.eventHandler.addEvent("RagFairBuyOffer", "Aki", TradeCallbacks.processRagfairTrade.bind(this));
item_f.eventHandler.addEvent("AddToWishList", "Aki", WishlistCallbacks.addToWishlist.bind(this));
item_f.eventHandler.addEvent("RemoveFromWishList", "Aki", WishlistCallbacks.removeFromWishlist.bind(this));
